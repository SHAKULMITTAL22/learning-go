// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package generated

import (
	"context"
	"testing"
)

func TestField___Type_enumValues_args_6a87c7ce87(t *testing.T) {
	ec := &executionContext{}
	ctx := context.Background()

	t.Run("Test with includeDeprecated argument as bool", func(t *testing.T) {
		rawArgs := map[string]interface{}{"includeDeprecated": true}
		expected := map[string]interface{}{"includeDeprecated": true}

		result, err := ec.field___Type_enumValues_args(ctx, rawArgs)

		if err != nil {
			t.Errorf("Test failed with arguments %v, error: %v", rawArgs, err)
		}

		if result["includeDeprecated"] != expected["includeDeprecated"] {
			t.Errorf("Expected %v, but got %v", expected, result)
		} else {
			t.Logf("Test success with arguments %v", rawArgs)
		}
	})

	t.Run("Test with includeDeprecated argument as non-bool", func(t *testing.T) {
		rawArgs := map[string]interface{}{"includeDeprecated": "not-bool"}

		_, err := ec.field___Type_enumValues_args(ctx, rawArgs)

		if err == nil {
			t.Errorf("Test failed with arguments %v, error should not be nil", rawArgs)
		} else {
			t.Logf("Test success with arguments %v", rawArgs)
		}
	})

	t.Run("Test with no includeDeprecated argument", func(t *testing.T) {
		rawArgs := map[string]interface{}{}
		expected := map[string]interface{}{"includeDeprecated": false}

		result, err := ec.field___Type_enumValues_args(ctx, rawArgs)

		if err != nil {
			t.Errorf("Test failed with arguments %v, error: %v", rawArgs, err)
		}

		if result["includeDeprecated"] != expected["includeDeprecated"] {
			t.Errorf("Expected %v, but got %v", expected, result)
		} else {
			t.Logf("Test success with arguments %v", rawArgs)
		}
	})
}
