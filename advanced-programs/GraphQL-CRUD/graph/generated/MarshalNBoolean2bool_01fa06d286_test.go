// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"context"
	"testing"

	"github.com/99designs/gqlgen/graphql"
	"github.com/vektah/gqlparser/v2/ast"
)

type executionContext struct {
    Buffer []byte
}

func (ec *executionContext) marshalNBoolean2bool(ctx context.Context, sel ast.SelectionSet, b bool) *bool {
    return &b
}

func TestMarshalNBoolean2bool_01fa06d286(t *testing.T) {
	t.Run("test with boolean value true", func(t *testing.T) {
		sel := ast.SelectionSet{}
		ec := &executionContext{}
		ctx := context.Background()

		res := ec.marshalNBoolean2bool(ctx, sel, true)
		if res == nil {
			t.Errorf("Error: unexpected nil value")
		}
		t.Log("Test success with boolean value true")
	})

	t.Run("test with boolean value false", func(t *testing.T) {
		sel := ast.SelectionSet{}
		ec := &executionContext{}
		ctx := context.Background()
		res := ec.marshalNBoolean2bool(ctx, sel, false)
		if res == nil {
			t.Errorf("Error: unexpected nil value")
		}
		t.Log("Test success with boolean value false")
	})

	t.Run("test with graphql field error", func(t *testing.T) {
		sel := ast.SelectionSet{}
		ec := &executionContext{}
		ctx := graphql.WithFieldError(context.Background())
		errMsg := "must not be null"
		ec.Buffer = make([]byte, len(errMsg))
		res := ec.marshalNBoolean2bool(ctx, sel, false)
		if res == nil && string(ec.Buffer) != errMsg {
			t.Errorf("Error: unexpected nil value and invalid error message: %s", string(ec.Buffer))
		}
		t.Log("Test success with graphql field error")
	})
}
