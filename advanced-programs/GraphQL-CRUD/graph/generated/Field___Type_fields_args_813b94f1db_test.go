// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package generated

import (
	"context"
	"testing"
)

func TestField___Type_fields_args_813b94f1db(t *testing.T) {
	ec := &executionContext{}

	t.Run("Test with valid input", func(t *testing.T) {
		rawArgs := map[string]interface{}{
			"includeDeprecated": true,
		}
		expectedArgs := map[string]interface{}{
			"includeDeprecated": true,
		}

		resultArgs, err := ec.field___Type_fields_args(context.Background(), rawArgs)
		if err != nil {
			t.Errorf("Unexpected error: %v", err)
			t.Logf("Method arguments: %v", rawArgs)
		}

		if !compareArgs(resultArgs, expectedArgs) {
			t.Errorf("Expected %v, got %v", expectedArgs, resultArgs)
			t.Logf("Method arguments: %v", rawArgs)
		} else {
			t.Log("Test with valid input passed")
		}
	})

	t.Run("Test with invalid input", func(t *testing.T) {
		rawArgs := map[string]interface{}{
			"includeDeprecated": "invalid",
		}

		_, err := ec.field___Type_fields_args(context.Background(), rawArgs)
		if err == nil {
			t.Error("Expected error, got nil")
			t.Logf("Method arguments: %v", rawArgs)
		} else {
			t.Log("Test with invalid input passed")
		}
	})
}

// compareArgs is a helper function to compare two map arguments
func compareArgs(a, b map[string]interface{}) bool {
	if len(a) != len(b) {
		return false
	}

	for k, v := range a {
		if b[k] != v {
			return false
		}
	}

	return true
}
