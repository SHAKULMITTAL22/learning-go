// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package generated

import (
	"bytes"
	"context"
	"errors"
	"strconv"
	"sync"
	"sync/atomic"
	"testing"

	"github.com/99designs/gqlgen/graphql"
	"github.com/99designs/gqlgen/graphql/introspection"
	"github.com/tannergabriel/learning-go/advanced-programs/GraphQL-CRUD/graph/model"
	gqlparser "github.com/vektah/gqlparser/v2"
	"github.com/vektah/gqlparser/v2/ast"
)

func Test_Query___schema_114eb5f4d0(t *testing.T) {
	ec := &executionContext{}
	ctx := context.Background()
	field := graphql.CollectedField{}

	// Test case 1: Normal case
	t.Run("Normal case", func(t *testing.T) {
		res := ec._Query___schema(ctx, field)
		if res == graphql.Null {
			t.Error("Test case 1 failed, expected not null, got null")
		} else {
			t.Log("Test case 1 success")
		}
	})

	// Test case 2: Test with panic
	t.Run("Test with panic", func(t *testing.T) {
		defer func() {
			if r := recover(); r != nil {
				t.Error("Test case 2 failed, unexpected panic")
			} else {
				t.Log("Test case 2 success")
			}
		}()
		res := ec._Query___schema(ctx, field)
		if res != graphql.Null {
			t.Error("Test case 2 failed, expected null, got not null")
		}
	})
}
