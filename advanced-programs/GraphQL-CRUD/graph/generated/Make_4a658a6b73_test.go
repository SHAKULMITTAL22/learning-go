// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"context"
	"testing"
	"github.com/99designs/gqlgen/graphql"
	"github.com/vektah/gqlparser/v2/ast"
)

// TestMake_4a658a6b73 tests the function marshalN__DirectiveLocation2ᚕstringᚄ in the executionContext struct
func TestMake_4a658a6b73(t *testing.T) {
	// Test case: passing a non-empty slice
	nonEmptySlice := []string{"EXAMPLE1", "EXAMPLE2", "EXAMPLE3"}
	ctx := context.Background()
	execCtx := &executionContext{}
	
	// Dummy ast.SelectionSet
	selSet := ast.SelectionSet{}
	res := execCtx.marshalN__DirectiveLocation2ᚕstringᚄ(ctx, selSet, nonEmptySlice)
	
	// Check the results
	if len(res) != len(nonEmptySlice) {
		t.Errorf("Mismatch in lengths. Expected %v, got %v", len(nonEmptySlice), len(res))
	}
	for i, result := range res {
		if result != graphql.MarshalString(nonEmptySlice[i]) {
			t.Errorf("Mismatch in marshalled values. Expected %v, got %v", nonEmptySlice[i], result)
		}
	}
	t.Log("Test case: passing a non-empty slice passed")

	// Test case: passing an empty slice
	emptySlice := []string{}
	resEmpty := execCtx.marshalN__DirectiveLocation2ᚕstringᚄ(ctx, selSet, emptySlice)
	
	// Check the results
	if len(resEmpty) != 0 {
		t.Errorf("Expected length 0 for empty input, got %v", len(resEmpty))
	}
	t.Log("Test case: passing an empty slice passed")
}
