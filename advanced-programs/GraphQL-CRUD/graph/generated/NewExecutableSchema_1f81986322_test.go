// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package generated

import (
	"testing"
	"github.com/99designs/gqlgen/graphql"
)

type mockResolver struct{}

func (r *mockResolver) Mutation() graphql.Resolver {
	return nil
}

func (r *mockResolver) Query() graphql.Resolver {
	return nil
}

func TestNewExecutableSchema_1f81986322(t *testing.T) {
	t.Run("Test with valid config", func(t *testing.T) {
		cfg := Config{
			Resolvers:  &mockResolver{},
			Directives: DirectiveRoot{},
			Complexity: ComplexityRoot{},
		}

		schema := NewExecutableSchema(cfg)
		if schema == nil {
			t.Error("Failed to create new executable schema")
			t.Logf("Method arguments: %v", cfg)
		} else {
			t.Log("Success: Created new executable schema")
		}
	})

	t.Run("Test with nil resolver", func(t *testing.T) {
		cfg := Config{
			Resolvers:  nil,
			Directives: DirectiveRoot{},
			Complexity: ComplexityRoot{},
		}

		schema := NewExecutableSchema(cfg)
		if schema == nil {
			t.Error("Failed to create new executable schema with nil resolver")
			t.Logf("Method arguments: %v", cfg)
		} else {
			t.Log("Success: Created new executable schema with nil resolver")
		}
	})
}
