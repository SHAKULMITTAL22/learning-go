// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k
package generated

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/99designs/gqlgen/graphql"
	"github.com/vektah/gqlparser/v2/ast"
)

// executionContext is a dummy struct for testing
type executionContext struct{}

// marshalOBoolean2bool is a dummy function for testing
func (ec *executionContext) marshalOBoolean2bool(ctx context.Context, selSet ast.SelectionSet, v bool) (result graphql.Marshaler) {
	return graphql.MarshalBoolean(v)
}

// TestMarshalOBoolean2bool_a633071b5d tests the marshaling of boolean value
// through GraphQL
func TestMarshalOBoolean2bool_a633071b5d(t *testing.T) {
	t.Parallel()

	// Creating an instance of executionContext
	ec := &executionContext{}

	// Creating a dummy ast.SelectionSet
	selSet := ast.SelectionSet{}

	// Use of Context type for passing data across API boundaries 
	ctx := context.Background()

	// First test with boolean value set to true
	v := true
	result := ec.marshalOBoolean2bool(ctx, selSet, v)

	// Assert the value is marshalled successfully
	assert.Equal(t, graphql.MarshalBoolean(v), result, "The two boolean values should be the same")

	// Second test with boolean value set to false
	v = false
	result = ec.marshalOBoolean2bool(ctx, selSet, v)

	// Assert the value is marshalled successfully
	assert.Equal(t, graphql.MarshalBoolean(v), result, "The two boolean values should be the same")
}
