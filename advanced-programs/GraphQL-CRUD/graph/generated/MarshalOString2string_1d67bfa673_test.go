// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"context"
	"testing"

	"github.com/99designs/gqlgen/graphql"
	"github.com/vektah/gqlparser/v2/ast"
)

// TestMarshalOString2string_1d67bfa673 tests the marshalOString2string function
func TestMarshalOString2string_1d67bfa673(t *testing.T) {
	ec := &executionContext{}
	ctx := context.Background()
	sel := ast.SelectionSet{}

	tests := []struct {
		name   string
		input  string
		output graphql.Marshaler
	}{
		{
			name:   "Test 1: Valid String",
			input:  "Test String",
			output: graphql.MarshalString("Test String"),
		},
		{
			name:   "Test 2: Empty String",
			input:  "",
			output: graphql.MarshalString(""),
		},
		{
			name:   "Test 3: Numerical String",
			input:  "12345",
			output: graphql.MarshalString("12345"),
		},
		{
			name:   "Test 4: Special Characters String",
			input:  "!$#@&^%",
			output: graphql.MarshalString("!$#@&^%"),
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			res := ec.marshalOString2string(ctx, sel, tt.input)
			if res != tt.output {
				t.Errorf("Result of marshalOString2string = %v, but expected %v", res, tt.output)
			} else {
				t.Logf("Test passed for input: %s", tt.input)
			}
		})
	}
}
