// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package generated

import (
	"context"
	"testing"
)

func TestField_Mutation_delete_args_af684aa666(t *testing.T) {
	ec := &executionContext{}

	t.Run("test with valid id", func(t *testing.T) {
		rawArgs := map[string]interface{}{"id": 1}
		args, err := ec.field_Mutation_delete_args(context.Background(), rawArgs)
		if err != nil {
			t.Errorf("field_Mutation_delete_args() error = %v, args = %v", err, rawArgs)
			return
		}
		if args["id"] != 1 {
			t.Errorf("field_Mutation_delete_args() got = %v, want = %v", args["id"], 1)
		}
		t.Log("test with valid id passed")
	})

	t.Run("test with invalid id", func(t *testing.T) {
		rawArgs := map[string]interface{}{"id": "invalid"}
		_, err := ec.field_Mutation_delete_args(context.Background(), rawArgs)
		if err == nil {
			t.Errorf("field_Mutation_delete_args() error = nil, want error")
			return
		}
		t.Log("test with invalid id passed")
	})

	t.Run("test with no id", func(t *testing.T) {
		rawArgs := map[string]interface{}{}
		args, err := ec.field_Mutation_delete_args(context.Background(), rawArgs)
		if err != nil {
			t.Errorf("field_Mutation_delete_args() error = %v, args = %v", err, rawArgs)
			return
		}
		if args["id"] != 0 {
			t.Errorf("field_Mutation_delete_args() got = %v, want = %v", args["id"], 0)
		}
		t.Log("test with no id passed")
	})
}
