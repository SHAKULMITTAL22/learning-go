// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"context"
	"testing"
)

func TestField_Mutation_delete_args_af684aa666(t *testing.T) {
	ec := executionContext{}

	var tests = []struct {
		input map[string]interface{}
		want  map[string]interface{}
	}{
		{map[string]interface{}{"id": 123}, map[string]interface{}{"id": 123}},
		{map[string]interface{}{}, map[string]interface{}{"id": 0}},
	}

	for _, tt := range tests {
		testname := "Testing for input " + string(tt.input)
		t.Run(testname, func(t *testing.T) {
			ans, err := ec.field_Mutation_delete_args(context.Background(), tt.input)
			if err != nil {
				t.Errorf("got error %s, want %v", err, tt.want)
			}
			if ans != tt.want {
				t.Errorf("got %d, want %d", ans, tt.want)
			} else {
				t.Logf("Test successfully passed")
			}
		})
	}
}

type executionContext struct{}

func (ec *executionContext) field_Mutation_delete_args(ctx context.Context, rawArgs map[string]interface{}) (map[string]interface{}, error) {
	var err error
	args := map[string]interface{}{}
	var arg0 int
	if tmp, ok := rawArgs["id"]; ok {
		arg0, err = ec.unmarshalNInt2int(ctx, tmp)
		if err != nil {
			return nil, err
		}
	}
	args["id"] = arg0
	return args, nil
}

func (ec *executionContext) unmarshalNInt2int(ctx context.Context, v interface{}) (int, error) {
	if tmp, ok := v.(int); ok {
		return tmp, nil
	}
	return 0, nil
}
