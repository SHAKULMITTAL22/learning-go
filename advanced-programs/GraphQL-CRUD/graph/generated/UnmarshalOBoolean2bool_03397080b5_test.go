// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"context"
	"testing"

	"github.com/99designs/gqlgen/graphql"
)

// Unit test for unmarshalOBoolean2bool
func TestUnmarshalOBoolean2bool_03397080b5(t *testing.T) {
	
	// Create a new instance of executionContext
	ec := &executionContext{}

	// Test with a valid boolean input
	t.Run("Test with a valid boolean input", func(t *testing.T) {
		input := true
		result, err := ec.unmarshalOBoolean2bool(context.TODO(), input)
		if err != nil {
			t.Errorf("unmarshalOBoolean2bool failed with error: %v, input was %v", err, input)
		}
		if result != true {
			t.Errorf("unmarshalOBoolean2bool return value doesn't match with input, got: %v, want: %v", result, input)
		} else {
			t.Log("Test with a valid boolean input passed.")
		}
	})

	// Test with an invalid type (non-boolean)
	t.Run("Test with an invalid type (non-boolean)", func(t *testing.T) {
		input := "non-boolean value"
		_, err := ec.unmarshalOBoolean2bool(context.TODO(), input)
		if err == nil {
			t.Errorf("unmarshalOBoolean2bool should have failed for non-boolean input, but it didn't, input was %v", input)
		} else {
			if err != graphql.MarshalError("unable to marshal") {
				t.Errorf("unmarshalOBoolean2bool error message does not match, got: %v, want: %v", err, graphql.MarshalError("unable to marshal"))
			}
			t.Log("Test with an invalid type (non-boolean) passed.")
		}
	})
}
