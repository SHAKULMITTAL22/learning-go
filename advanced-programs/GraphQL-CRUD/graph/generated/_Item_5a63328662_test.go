// Test generated by assistant for test azure-32k-go using AI Type Open AI and AI Model assistant-gpt4-32k

package generated_test

import (
	"context"
	"testing"

	"github.com/99designs/gqlgen/graphql"
	"github.com/99designs/gqlgen/graphql/introspection"
	"github.com/tannergabriel/learning-go/advanced-programs/GraphQL-CRUD/graph/model"
	gqlparser "github.com/vektah/gqlparser/v2"
	"github.com/vektah/gqlparser/v2/ast"
)

func Test_Item_5a63328662(t *testing.T) {
	t.Run("Test with valid parameters", func(t *testing.T) {
		ec := &generated.executionContext{
			OperationContext: &graphql.OperationContext{
				RawQuery: "",
			},
		}
		ctx := context.Background()
		sel := ast.SelectionSet{}
		obj := &model.Item{
			ID:     "1",
			Title:  "Test item",
			Owner:  "Test owner",
			Rating: 5,
		}
		result := ec._Item(ctx, sel, obj)

		if result == graphql.Null {
			t.Errorf("Test with valid parameters failed, expected not null, got null")
		} else {
			t.Log("Test with valid parameters succeeded")
		}
	})

	t.Run("Test with invalid parameters (null Item)", func(t *testing.T) {
		ec := &generated.executionContext{
			OperationContext: &graphql.OperationContext{
				RawQuery: "",
			},
		}
		ctx := context.Background()
		sel := ast.SelectionSet{}
		obj := &model.Item{}
		result := ec._Item(ctx, sel, obj)

		if result != graphql.Null {
			t.Errorf("Test with invalid parameters failed, expected null, got not null")
		} else {
			t.Log("Test with invalid parameters succeeded")
		}
	})
}
