// Test generated by roost-gpt4-32k

package generated

import (
	"context"
	"testing"

	"github.com/99designs/gqlgen/graphql"
	"github.com/99designs/gqlgen/graphql/introspection"
	"github.com/stretchr/testify/assert"
)

type executionContext struct{}

func (e *executionContext) ___Field_description(ctx context.Context, collectedField graphql.CollectedField, field *introspection.Field) graphql.Marshaler {
	if field == nil {
		return graphql.Null
	}
	return graphql.MarshalString(field.Description)
}

func Test___Field_description_ee4af3c1b7(t *testing.T) {
	ec := &executionContext{}

	obj := &introspection.Field{
		Description: "this is a test description",
	}

	collectedField := graphql.CollectedField{}

	t.Run("Success Case", func(t *testing.T) {
		ctx := context.Background()
		ret := ec.___Field_description(ctx, collectedField, obj)
		output, _ := ret.MarshalJSON()
		assert.Equal(t, "\"this is a test description\"", string(output))
	})

	t.Run("Failure Case", func(t *testing.T) {
		ctx := context.Background()
		ret := ec.___Field_description(ctx, collectedField, nil)
		output, _ := ret.MarshalJSON()
		assert.Equal(t, "null", string(output))
		if ret != graphql.Null {
			t.Error("Failed Case Failed")
		}
	})
}
