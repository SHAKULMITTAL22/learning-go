// Test generated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated_test

import (
	"testing"
	"context"

	"github.com/99designs/gqlgen/graphql"
)

type executionContext struct{}

// TEST CASES
func TestUnmarshalNInt2int_02ccd8da0d(t *testing.T) {
	ec := &executionContext{}
	// Test with valid integer
	t.Run("valid integer", func(t *testing.T) {
		value, err := ec.unmarshalNInt2int(context.Background(), 123456)
		if err != nil {
			t.Errorf("Expected nil error, but got '%v'. ARGS: (%v)", err, 123456)
			return
		}
		if value != 123456 {
			t.Errorf("Expected 123456, but got '%v'", value)
			return
		}
		t.Log("Test Passed for valid integer case.")
	})

	// Test with float (invalid)
	t.Run("float instead of integer", func(t *testing.T) {
		_, err := ec.unmarshalNInt2int(context.Background(), 123.456)
		if err == nil {
			t.Errorf("Expected error because float was passed, but got nil. ARGS:(%v)", 123.456)
			return
		}
		t.Log("Test Passed for float instead of integer case.")
	})
}

// ORIGINAL FUNCTION
func (ec *executionContext) unmarshalNInt2int(ctx context.Context, v interface{}) (int, error) {
	return graphql.UnmarshalInt(v)
}
