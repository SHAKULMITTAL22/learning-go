// Test code regenerated by RoostGPT for test azure-32k-go using AI Type Azure Open AI and AI Model roost-gpt4-32k

package generated

import (
	"testing"
	"context"
	
	"github.com/99designs/gqlgen/graphql"
	"github.com/99designs/gqlgen/graphql/introspection"
	"github.com/vektah/gqlparser/v2/ast"
)

// Replaced execution context with the mocked case
type executionContext struct {
}

func (ec *executionContext) ___EnumValue_name(ctx context.Context, field ast.Field, obj *introspection.EnumValue) graphql.Marshaler {
	return graphql.MarshalString("__EnumValue")
}

func (ec *executionContext) ___EnumValue_description(ctx context.Context, field ast.Field, obj *introspection.EnumValue) graphql.Marshaler {
	return graphql.Null
}

func (ec *executionContext) ___EnumValue_isDeprecated(ctx context.Context, field ast.Field, obj *introspection.EnumValue) graphql.Marshaler {
	return graphql.Null
}

func (ec *executionContext) ___EnumValue_deprecationReason(ctx context.Context, field ast.Field, obj *introspection.EnumValue) graphql.Marshaler {
	return graphql.MarshalString("test")
}

// Test___EnumValue_f75cbd9d2b tests the method ___EnumValue of the executionContext
func Test___EnumValue_f75cbd9d2b(t *testing.T) {
	ctx := context.Background()
	sel := ast.SelectionSet{}
	obj := &introspection.EnumValue{}

	ec := &executionContext{}

	retVal := ec.___EnumValue_name(ctx, sel, obj)

	if retVal != nil {
		t.Errorf("Error in Test___EnumValue_f75cbd9d2b, got: %v, want: %v.", retVal, nil)
	} else {
        t.Log("Test___EnumValue_f75cbd9d2b Passed, got nil as expected.")
    }

	obj = nil
	retVal = ec.___EnumValue_name(ctx, sel, obj)

	if retVal != graphql.Null {
		t.Errorf("Error in Test___EnumValue_f75cbd9d2b, got: %v, want: graphql.Null.", retVal)
	} else {
        t.Log("Test___EnumValue_f75cbd9d2b Passed, got graphql.Null as expected.")
    }
}
