// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package SquareRoot

import (
	"math"
	"testing"
)

func newtonMethod(z, x float64) float64 {
	return z - (((z * z) - x) / (2 * z))
}

func TestNewtonMethod(t *testing.T) {
	tests := []struct {
		name string
		z    float64
		x    float64
		want float64
	}{
		{
			name: "Test case 1: Testing with positive numbers",
			z:    2.0,
			x:    4.0,
			want: 2.5,
		},
		{
			name: "Test case 2: Testing with zero",
			z:    0.0,
			x:    0.0,
			want: math.NaN(),
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := newtonMethod(tt.z, tt.x); !almostEqual(got, tt.want) {
				t.Errorf("newtonMethod() = %v, want %v", got, tt.want)
			} else {
				t.Logf("Success: newtonMethod() = %v, want %v", got, tt.want)
			}
		})
	}
}

func almostEqual(a, b float64) bool {
	return math.Abs(a-b) <= 1e-9
}
