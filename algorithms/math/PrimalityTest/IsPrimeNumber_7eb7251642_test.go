// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package PrimalityTest

import (
	"testing"
)

func isPrimeNumberTest(num int) bool {
	for i := 2; i < num; i++ {
		if num%i == 0 {
			return false
		}
	}

	return true
}

func TestIsPrimeNumber_7eb7251642(t *testing.T) {
	// Test case 1: Prime number
	num := 7
	expected := true
	actual := isPrimeNumberTest(num)
	if actual != expected {
		t.Error("Test Case 1 Failed: {num: ", num, "} expected: ", expected, ", got: ", actual)
	} else {
		t.Log("Test Case 1 Passed")
	}

	// Test case 2: Non-prime number
	num = 8
	expected = false
	actual = isPrimeNumberTest(num)
	if actual != expected {
		t.Error("Test Case 2 Failed: {num: ", num, "} expected: ", expected, ", got: ", actual)
	} else {
		t.Log("Test Case 2 Passed")
	}

	// Test case 3: Edge case - smallest prime number
	num = 2
	expected = true
	actual = isPrimeNumberTest(num)
	if actual != expected {
		t.Error("Test Case 3 Failed: {num: ", num, "} expected: ", expected, ", got: ", actual)
	} else {
		t.Log("Test Case 3 Passed")
	}

	// Test case 4: Edge case - number 1 (not a prime number)
	num = 1
	expected = false
	actual = isPrimeNumberTest(num)
	if actual != expected {
		t.Error("Test Case 4 Failed: {num: ", num, "} expected: ", expected, ", got: ", actual)
	} else {
		t.Log("Test Case 4 Passed")
	}
}
