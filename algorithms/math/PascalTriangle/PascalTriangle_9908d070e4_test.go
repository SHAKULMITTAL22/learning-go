// Test generated by RoostGPT for test math-go using AI Type Vertex AI and AI Model code-bison

package PascalTriangle

import (
    "testing"
)

func TestPascalTriangle_9908d070e4(t *testing.T) {
    testCases := []struct {
        height int
        expected [][]int
    }{
        {
            height: 1,
            expected: [][]int{
                {1},
            },
        },
        {
            height: 2,
            expected: [][]int{
                {1},
                {1, 1},
            },
        },
        {
            height: 3,
            expected: [][]int{
                {1},
                {1, 1},
                {1, 2, 1},
            },
        },
        {
            height: 4,
            expected: [][]int{
                {1},
                {1, 1},
                {1, 2, 1},
                {1, 3, 3, 1},
            },
        },
        {
            height: 5,
            expected: [][]int{
                {1},
                {1, 1},
                {1, 2, 1},
                {1, 3, 3, 1},
                {1, 4, 6, 4, 1},
            },
        },
    }

    for _, tc := range testCases {
        actual := pascalTriangle(tc.height)
        if len(actual) != len(tc.expected) {
            t.Errorf("Expected %d rows, got %d", len(tc.expected), len(actual))
        }
        for i := range actual {
            if len(actual[i]) != len(tc.expected[i]) {
                t.Errorf("Expected %d columns in row %d, got %d", len(tc.expected[i]), i, len(actual[i]))
            }
            for j := range actual[i] {
                if actual[i][j] != tc.expected[i][j] {
                    t.Errorf("Expected %d at row %d, column %d, got %d", tc.expected[i][j], i, j, actual[i][j])
                }
            }
        }
    }
}
