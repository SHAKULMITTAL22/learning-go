// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package Radian

import (
	"math"
	"testing"
)

func degreeToRadianTestFunc(degree float64) float64 {
	return degree * (math.Pi / 180)
}

func TestDegreeToRadian_c38219c312(t *testing.T) {
	t.Run("Test with positive degree value", func(t *testing.T) {
		degree := 45.0
		expected := 0.7853981633974483
		actual := degreeToRadianTestFunc(degree)
		if actual != expected {
			t.Errorf("degreeToRadianTestFunc(%v) = %v; want %v", degree, actual, expected)
		} else {
			t.Logf("Success: degreeToRadianTestFunc(%v) = %v", degree, actual)
		}
	})

	t.Run("Test with negative degree value", func(t *testing.T) {
		degree := -45.0
		expected := -0.7853981633974483
		actual := degreeToRadianTestFunc(degree)
		if actual != expected {
			t.Errorf("degreeToRadianTestFunc(%v) = %v; want %v", degree, actual, expected)
		} else {
			t.Logf("Success: degreeToRadianTestFunc(%v) = %v", degree, actual)
		}
	})

	t.Run("Test with zero degree value", func(t *testing.T) {
		degree := 0.0
		expected := 0.0
		actual := degreeToRadianTestFunc(degree)
		if actual != expected {
			t.Errorf("degreeToRadianTestFunc(%v) = %v; want %v", degree, actual, expected)
		} else {
			t.Logf("Success: degreeToRadianTestFunc(%v) = %v", degree, actual)
		}
	})
}
