// Test generated by RoostGPT for test math-go using AI Type Vertex AI and AI Model code-bison

package Fibonacci

import (
	"testing"
)

func TestFibonacciRecursive_6a9d243a0e(t *testing.T) {
	// Test case 1: n = 0
	expected := 0
	actual := FibonacciRecursive(0)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 2: n = 1
	expected = 1
	actual = FibonacciRecursive(1)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 3: n = 2
	expected = 1
	actual = FibonacciRecursive(2)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 4: n = 3
	expected = 2
	actual = FibonacciRecursive(3)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 5: n = 4
	expected = 3
	actual = FibonacciRecursive(4)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 6: n = 5
	expected = 5
	actual = FibonacciRecursive(5)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 7: n = 6
	expected = 8
	actual = FibonacciRecursive(6)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 8: n = 7
	expected = 13
	actual = FibonacciRecursive(7)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 9: n = 8
	expected = 21
	actual = FibonacciRecursive(8)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}

	// Test case 10: n = 9
	expected = 34
	actual = FibonacciRecursive(9)
	if actual != expected {
		t.Errorf("Expected %d, got %d", expected, actual)
	}
}
