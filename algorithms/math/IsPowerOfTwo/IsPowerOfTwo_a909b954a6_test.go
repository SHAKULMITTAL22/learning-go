// Test generated by RoostGPT for test roost-test using AI Type Vertex AI and AI Model codechat-bison-32k

package IsPowerOfTwo

import (
	"testing"
)

func TestIsPowerOfTwo_a909b954a6(t *testing.T) {
	// Test case 1: num is a power of two
	num := 16
	expected := true
	actual := isPowerOfTwo(num)
	if actual != expected {
		t.Errorf("TestIsPowerOfTwo_a909b954a6 failed. num: %d, expected: %t, actual: %t", num, expected, actual)
	} else {
		t.Log("TestIsPowerOfTwo_a909b954a6 passed.")
	}

	// Test case 2: num is not a power of two
	num = 15
	expected = false
	actual = isPowerOfTwo(num)
	if actual != expected {
		t.Errorf("TestIsPowerOfTwo_a909b954a6 failed. num: %d, expected: %t, actual: %t", num, expected, actual)
	} else {
		t.Log("TestIsPowerOfTwo_a909b954a6 passed.")
	}

	// Test case 3: num is 0
	num = 0
	expected = false
	actual = isPowerOfTwo(num)
	if actual != expected {
		t.Errorf("TestIsPowerOfTwo_a909b954a6 failed. num: %d, expected: %t, actual: %t", num, expected, actual)
	} else {
		t.Log("TestIsPowerOfTwo_a909b954a6 passed.")
	}

	// Test case 4: num is 1
	num = 1
	expected = false
	actual = isPowerOfTwo(num)
	if actual != expected {
		t.Errorf("TestIsPowerOfTwo_a909b954a6 failed. num: %d, expected: %t, actual: %t", num, expected, actual)
	} else {
		t.Log("TestIsPowerOfTwo_a909b954a6 passed.")
	}

	// Test case 5: num is negative
	num = -16
	expected = false
	actual = isPowerOfTwo(num)
	if actual != expected {
		t.Errorf("TestIsPowerOfTwo_a909b954a6 failed. num: %d, expected: %t, actual: %t", num, expected, actual)
	} else {
		t.Log("TestIsPowerOfTwo_a909b954a6 passed.")
	}
}
