// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package CountingSort

import (
	"testing"
)

func TestGetCountArrayLength_93c7685300(t *testing.T) {
	testCases := []struct {
		name string
		arr  []int
		want int
	}{
		{"Empty array", []int{}, 1},
		{"Array with single element", []int{5}, 6},
		{"Array with multiple elements", []int{1, 2, 3, 4, 5}, 6},
		{"Array with negative elements", []int{-1, -2, -3, -4, -5}, 1},
		{"Array with same elements", []int{2, 2, 2, 2, 2}, 3},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			got := getCountArrayLengthTest(tc.arr)
			if got != tc.want {
				t.Errorf("getCountArrayLengthTest(%v) = %v; want %v", tc.arr, got, tc.want)
			} else {
				t.Logf("Success: getCountArrayLengthTest(%v) = %v", tc.arr, got)
			}
		})
	}
}

func getCountArrayLengthTest(arr []int) int {
	// If array is 0 + 1
	if len(arr) == 0 {
		return 1
	}

	k := arr[0]

	// Set k to the highest value of the array
	for _, value := range arr {
		if value > k {
			k = value
		}
	}

	return k + 1
}
