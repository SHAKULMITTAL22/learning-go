// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package InsertionSort

import (
	"reflect"
	"testing"
)

func TestSwap_da24280a8f(t *testing.T) {
	// Test case 1: Testing with valid indices
	arr1 := []int{1, 2, 3, 4, 5}
	swapLocal(arr1, 1, 3)

	if !reflect.DeepEqual(arr1, []int{1, 4, 3, 2, 5}) {
		t.Error("Test case 1 failed: swap did not correctly swap elements at indices 1 and 3")
	} else {
		t.Log("Test case 1 passed")
	}

	// Test case 2: Testing with same indices
	arr2 := []int{6, 7, 8, 9, 10}
	swapLocal(arr2, 2, 2)

	if !reflect.DeepEqual(arr2, []int{6, 7, 8, 9, 10}) {
		t.Error("Test case 2 failed: swap should not change array when indices are same")
	} else {
		t.Log("Test case 2 passed")
	}

	// Test case 3: Testing with indices out of range
	arr3 := []int{11, 12, 13, 14, 15}
	defer func() {
		if r := recover(); r == nil {
			t.Error("Test case 3 failed: swap should panic when indices are out of range")
		} else {
			t.Log("Test case 3 passed")
		}
	}()
	swapLocal(arr3, 5, 6)
}

func swapLocal(arr []int, i, j int) {
	tmp := arr[j]
	arr[j] = arr[i]
	arr[i] = tmp
}
