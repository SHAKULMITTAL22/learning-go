// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package MergeSort

import (
	"reflect"
	"testing"
)

func TestMergeSort_bddcaab54b(t *testing.T) {
	// Test case 1: Normal case
	arr1 := []int{5, 4, 3, 2, 1}
	expected1 := []int{1, 2, 3, 4, 5}
	result1 := mergeSort(arr1)
	if !reflect.DeepEqual(result1, expected1) {
		t.Errorf("Test case 1: Expected %v, got %v", expected1, result1)
	} else {
		t.Logf("Test case 1: Success")
	}

	// Test case 2: Array with one element
	arr2 := []int{1}
	expected2 := []int{1}
	result2 := mergeSort(arr2)
	if !reflect.DeepEqual(result2, expected2) {
		t.Errorf("Test case 2: Expected %v, got %v", expected2, result2)
	} else {
		t.Logf("Test case 2: Success")
	}

	// Test case 3: Array with duplicate elements
	arr3 := []int{5, 3, 4, 1, 5, 2, 1}
	expected3 := []int{1, 1, 2, 3, 4, 5, 5}
	result3 := mergeSort(arr3)
	if !reflect.DeepEqual(result3, expected3) {
		t.Errorf("Test case 3: Expected %v, got %v", expected3, result3)
	} else {
		t.Logf("Test case 3: Success")
	}

	// Test case 4: Empty array
	arr4 := []int{}
	expected4 := []int{}
	result4 := mergeSort(arr4)
	if !reflect.DeepEqual(result4, expected4) {
		t.Errorf("Test case 4: Expected %v, got %v", expected4, result4)
	} else {
		t.Logf("Test case 4: Success")
	}
}
