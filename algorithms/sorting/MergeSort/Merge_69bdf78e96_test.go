// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package MergeSort

import (
	"reflect"
	"testing"
)

func TestMerge_69bdf78e96(t *testing.T) {
	t.Run("test with two sorted arrays", func(t *testing.T) {
		left := []int{1, 3, 5}
		right := []int{2, 4, 6}
		expected := []int{1, 2, 3, 4, 5, 6}
		result := merge(left, right)
		if !reflect.DeepEqual(result, expected) {
			t.Errorf("merge(%v, %v) = %v; want %v", left, right, result, expected)
		} else {
			t.Logf("Success: merge(%v, %v) = %v", left, right, result)
		}
	})

	t.Run("test with one empty array", func(t *testing.T) {
		left := []int{}
		right := []int{2, 4, 6}
		expected := []int{2, 4, 6}
		result := merge(left, right)
		if !reflect.DeepEqual(result, expected) {
			t.Errorf("merge(%v, %v) = %v; want %v", left, right, result, expected)
		} else {
			t.Logf("Success: merge(%v, %v) = %v", left, right, result)
		}
	})

	t.Run("test with two empty arrays", func(t *testing.T) {
		left := []int{}
		right := []int{}
		expected := []int{}
		result := merge(left, right)
		if !reflect.DeepEqual(result, expected) {
			t.Errorf("merge(%v, %v) = %v; want %v", left, right, result, expected)
		} else {
			t.Logf("Success: merge(%v, %v) = %v", left, right, result)
		}
	})
}
