// ********RoostGPT********
/*
Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Valid Email 
   - Description: The function should return true when a valid email is passed.
   - Input: "test@example.com"
   - Expected Output: true

2. Test Scenario: Invalid Email Without '@' Symbol 
   - Description: The function should return false when an email without '@' symbol is passed.
   - Input: "testexample.com"
   - Expected Output: false

3. Test Scenario: Invalid Email Without Domain 
   - Description: The function should return false when an email without domain is passed.
   - Input: "test@"
   - Expected Output: false

4. Test Scenario: Invalid Email with Extra Characters 
   - Description: The function should return false when an email with extra characters is passed.
   - Input: "test@@example.com"
   - Expected Output: false

5. Test Scenario: Invalid Email with Spaces 
   - Description: The function should return false when an email with spaces is passed.
   - Input: "test @example.com"
   - Expected Output: false

6. Test Scenario: Email Length More Than 254 Characters 
   - Description: The function should return false when an email of length more than 254 characters is passed.
   - Input: A string of length 255 with valid email format
   - Expected Output: false

7. Test Scenario: Empty String
   - Description: The function should return false when an empty string is passed.
   - Input: ""
   - Expected Output: false

8. Test Scenario: Email Length Exactly 254 Characters 
   - Description: The function should return true when an email of length exactly 254 characters is passed.
   - Input: A string of length 254 with valid email format
   - Expected Output: true

9. Test Scenario: Special Characters in Local Part of Email 
   - Description: The function should return true when an email with special characters in the local part is passed.
   - Input: "test.email+alex@leetcode.com"
   - Expected Output: true

10. Test Scenario: Capital Letters in Email 
   - Description: The function should return true when an email with capital letters is passed.
   - Input: "TestEmail@example.com"
   - Expected Output: true
*/

// ********RoostGPT********
package Validator

import (
	"testing"
)

func TestIsValidEmail_9284e633d3(t *testing.T) {
	tests := []struct {
		name  string
		email string
		want  bool
	}{
		{
			name:  "Valid Email",
			email: "test@example.com",
			want:  true,
		},
		{
			name:  "Invalid Email Without '@' Symbol",
			email: "testexample.com",
			want:  false,
		},
		{
			name:  "Invalid Email Without Domain",
			email: "test@",
			want:  false,
		},
		{
			name:  "Invalid Email with Extra Characters",
			email: "test@@example.com",
			want:  false,
		},
		{
			name:  "Invalid Email with Spaces",
			email: "test @example.com",
			want:  false,
		},
		{
			name:  "Email Length More Than 254 Characters",
			email: string(make([]byte, 255)),
			want:  false,
		},
		{
			name:  "Empty String",
			email: "",
			want:  false,
		},
		{
			name:  "Email Length Exactly 254 Characters",
			email: "a" + string(make([]byte, 247)) + "@b.com",
			want:  true,
		},
		{
			name:  "Special Characters in Local Part of Email",
			email: "test.email+alex@leetcode.com",
			want:  true,
		},
		{
			name:  "Capital Letters in Email",
			email: "TestEmail@example.com",
			want:  true,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := IsValidEmail(tt.email); got != tt.want {
				t.Errorf("IsValidEmail() = %v, want %v", got, tt.want)
			}
		})
	}
}
