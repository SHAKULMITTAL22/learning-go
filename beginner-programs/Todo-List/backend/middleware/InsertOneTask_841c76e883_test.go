// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package middleware

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"os"
	"strings"
	"testing"

	"github.com/tannergabriel/learning-go/beginner-programs/todo-list/backend/models"
	"github.com/joho/godotenv"
	"go.mongodb.org/mongo-driver/bson/primitive"
	"go.mongodb.org/mongo-driver/mongo"
)

func TestInsertOneTask(t *testing.T) {
	godotenv.Load(os.ExpandEnv("$GOPATH/src/github.com/tannergabriel/learning-go/beginner-programs/todo-list/backend/.env"))

	tests := []struct {
		name string
		task models.ToDoList
		want string
	}{
		{
			name: "TestCase 1: Insert a Valid Task",
			task: models.ToDoList{
				ID:     primitive.NilObjectID,
				Task:   "Test Task 1",
				Status: true},
			want: "Inserted a Single Record",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			var buf bytes.Buffer
			out = &buf
			insertOneTask(tt.task)
			// check if log message was correctly formatted
			got := buf.String()
			if !strings.Contains(got, tt.want) {
				t.Errorf("InsertOneTask() = %v, want %v", got, tt.want)
			}
		})
	}
}
