// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package middleware

import (
	"net/http"
	"net/http/httptest"
	"testing"
)

// TestSetupResponse_a69e61ede7 tests the setupResponse function.
func TestSetupResponse_a69e61ede7(t *testing.T) {
	// Create a request to pass to our handler.
	req, err := http.NewRequest("GET", "", nil)
	if err != nil {
		t.Fatal(err)
	}

	// Create a ResponseRecorder to record the response.
	rr := httptest.NewRecorder()

	setupResponse(&rr, req)

	// Check the status code is what we expect.
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}

	// Check the response headers
	if rr.Header().Get("Access-Control-Allow-Origin") != "*" {
		t.Errorf("handler returned unexpected Access-Control-Allow-Origin header: got %v want %v",
			rr.Header().Get("Access-Control-Allow-Origin"), "*")
	}

	if rr.Header().Get("Access-Control-Allow-Methods") != "POST, GET, OPTIONS, PUT, DELETE" {
		t.Errorf("handler returned unexpected Access-Control-Allow-Methods header: got %v want %v",
			rr.Header().Get("Access-Control-Allow-Methods"), "POST, GET, OPTIONS, PUT, DELETE")
	}

	if rr.Header().Get("Access-Control-Allow-Headers") != "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization" {
		t.Errorf("handler returned unexpected Access-Control-Allow-Headers header: got %v want %v",
			rr.Header().Get("Access-Control-Allow-Headers"), "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization")
	}
}
