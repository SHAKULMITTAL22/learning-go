// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package server

import (
	"net/http/httptest"
	"strings"
	"testing"

	"github.com/gorilla/mux"
)

func TestHelloHandler(t *testing.T) {
	tests := []struct {
		name           string
		url            string
		expectedOutput string
	}{
		{
			name:           "Request without name parameter",
			url:            "/",
			expectedOutput: "Hello, world",
		},
		{
			name:           "Request with name parameter",
			url:            "/john",
			expectedOutput: "Hello, john",
		},
		{
			name:           "Request with name having special characters",
			url:            "/john@#$%^&*()",
			expectedOutput: "Hello, john@#$%^&*()",
		},
		{
			name:           "Request with long name",
			url:            "/johndoeisareallylongnamewhichneedstobetested",
			expectedOutput: "Hello, johndoeisareallylongnamewhichneedstobetested",
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			req := httptest.NewRequest("GET", tt.url, nil)
			w := httptest.NewRecorder()

			// Create a route that uses our HelloHandler function
			r := mux.NewRouter().Methods("GET").Subrouter()
			r.HandleFunc("/john", HelloHandler)
			r.ServeHTTP(w, req)

			if !strings.Contains(w.Body.String(), tt.expectedOutput) {
				t.Errorf("expected '%s' but got '%s'", tt.expectedOutput, w.Body.String())
			}
		})
	}
}
