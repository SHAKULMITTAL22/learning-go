// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

package serverTEST

import (
	"io/ioutil"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/YOUR_GITHUB_USERNAME/YOUR_REPO/server"
)

// TestHelloWorldHandler tests the HelloWorldHandler function from server package
func TestHelloWorldHandler(t *testing.T) {

	tests := []struct {
		name          string
		r             *http.Request
		expectedBody  string
		expectedError error
	}{
		{
			name:          "happy path",
			r:             httptest.NewRequest(http.MethodGet, "/", nil),
			expectedBody:  "Hello World!",
			expectedError: nil,
		},
		// Add more test cases as needed
	}

	for _, tt := range tests {

		t.Run(tt.name, func(t *testing.T) {

			rr := httptest.NewRecorder()

			handler := http.HandlerFunc(server.HelloWorldHandler)
			handler.ServeHTTP(rr, tt.r)

			if tt.expectedError == nil {
				if status := rr.Code; status != http.StatusOK {
					t.Errorf("handler returned wrong status code: got %v want %v",
						status, http.StatusOK)
				}
			}

			body, _ := ioutil.ReadAll(rr.Body)
			if string(body) != tt.expectedBody {
				t.Errorf("handler returned unexpected body: got %v want %v",
					rr.Body.String(), tt.expectedBody)
			}
		})
	}
}
