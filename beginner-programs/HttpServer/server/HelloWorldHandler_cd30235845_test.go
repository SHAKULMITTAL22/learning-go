// Test generated by RoostGPT for test roost-test using AI Type Vertex AI and AI Model code-bison-32k

package server

import (
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/gorilla/mux"
)

func TestHelloWorldHandler_cd30235845(t *testing.T) {
	// Create a new request
	req, err := http.NewRequest("GET", "/hello", nil)
	if err != nil {
		t.Fatal(err)
	}

	// Create a new response recorder
	rec := httptest.NewRecorder()

	// Create a new router
	router := mux.NewRouter()

	// Register the HelloWorldHandler function
	router.HandleFunc("/hello", HelloWorldHandler)

	// Serve the request
	router.ServeHTTP(rec, req)

	// Check the response status code
	if rec.Code != http.StatusOK {
		t.Errorf("Expected status code 200, got %d", rec.Code)
	}

	// Check the response body
	if rec.Body.String() != "Hello World!" {
		t.Errorf("Expected response body 'Hello World!', got '%s'", rec.Body.String())
	}
}

func TestHelloWorldHandler_Error(t *testing.T) {
	// Create a new request
	req, err := http.NewRequest("GET", "/hello", nil)
	if err != nil {
		t.Fatal(err)
	}

	// Create a new response recorder
	rec := httptest.NewRecorder()

	// Create a new router
	router := mux.NewRouter()

	// Register the HelloWorldHandler function
	router.HandleFunc("/hello", func(w http.ResponseWriter, r *http.Request) {
		w.WriteHeader(http.StatusInternalServerError)
		w.Write([]byte("Internal Server Error"))
	})

	// Serve the request
	router.ServeHTTP(rec, req)

	// Check the response status code
	if rec.Code != http.StatusInternalServerError {
		t.Errorf("Expected status code 500, got %d", rec.Code)
	}

	// Check the response body
	if rec.Body.String() != "Internal Server Error" {
		t.Errorf("Expected response body 'Internal Server Error', got '%s'", rec.Body.String())
	}
}