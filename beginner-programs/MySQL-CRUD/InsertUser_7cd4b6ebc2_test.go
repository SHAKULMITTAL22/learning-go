// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package main

import (
	"database/sql"
	"testing"
	"time"

	_ "github.com/go-sql-driver/mysql"
)

// TestInsertUser_7cd4b6ebc2 is a test function for the insertUser function
func TestInsertUser_7cd4b6ebc2(t *testing.T) {
	db, err := sql.Open("mysql", "user:password@/dbname")
	if err != nil {
		t.Fatal(err)
	}
	defer db.Close()

	// Test case 1: Insert a new user
	username1 := "testuser1"
	password1 := "testpassword1"
	t.Log("Test case 1: Insert a new user")
	err = insertUser(db, username1, password1)
	if err != nil {
		t.Errorf("Failed to insert user: %s, error: %s", username1, err)
	} else {
		t.Log("Passed test case 1: Successfully inserted user")
	}

	// Test case 2: Insert a user with an existing username
	username2 := "testuser1" // TODO: Change this to an existing username in your database
	password2 := "testpassword2"
	t.Log("Test case 2: Insert a user with an existing username")
	err = insertUser(db, username2, password2)
	if err == nil {
		t.Errorf("Failed test case 2: Successfully inserted user with an existing username")
	} else {
		t.Log("Passed test case 2: Failed to insert user with an existing username")
	}
}

// insertUser is a function to insert a new user to the database
func insertUser(db *sql.DB, username string, password string) error {
	createdAt := time.Now()

	_, err := db.Exec(`INSERT INTO users (username, password, created_at) VALUES (?, ?, ?)`, username, password, createdAt)
	if err != nil {
		return err
	}

	return nil
}
