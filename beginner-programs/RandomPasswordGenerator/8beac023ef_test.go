// ********RoostGPT********
// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
package main

import (
	"testing"
	"unicode"
)

func TestGeneratePasswordPositive(t *testing.T) {
	length := 10
	password := generatePassword(length)
	if len(password) != length {
		t.Errorf("Expected password length of %d, but got %d", length, len(password))
	}

	foundDigit := false
	foundSpecial := false
	for _, char := range password {
		switch {
		case unicode.IsDigit(char):
			foundDigit = true
		case unicode.IsPunct(char) || unicode.IsSymbol(char):
			foundSpecial = true
		}
	}

	if !foundDigit || !foundSpecial {
		t.Errorf("Password does not meet requirements: %s", password)
	}
}

func TestGeneratePasswordNegative(t *testing.T) {
	length := -1 // invalid length
	password := generatePassword(length)
	if len(password) != 0 {
		t.Errorf("Expected password length of 0 for negative length, but got %d", len(password))
	}
}

